{"version":3,"sources":["webpack:///./src/templates/mdxTemplate.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/components/main-layout.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["Page","data","mdx","body","frontmatter","id","title","description","components","Link","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","Layout","children","charSet","React","useMDXComponents","useMDXScope","scope","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"6FAAA,6JAMe,SAASA,EAAT,GAAyB,IAAD,IAARC,KACnBC,IAAOC,EADoB,EACpBA,KAAMC,EADc,EACdA,YACrB,OACI,kBAAC,IAAD,KAEI,yBAAKC,GAAG,QACJ,6BAASA,GAAG,eACR,4CACA,4BAAKD,EAAYE,OACjB,qCAAcF,EAAYG,cAE9B,iCACI,kBAAC,cAAD,KACI,kBAAC,cAAD,CAAaC,WAAYC,KACpBN,OAUtB,IAAMF,EAAI,a,uBCxBjB,IAAMS,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qBCRf,IAAIG,EAAU,EAAQ,QAClBC,EAAS,EAAQ,QACjBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAO,EAAQ,QACfC,GAAc,EAAQ,QAAaC,SAAW,IAAIC,UAIlDC,EAAiBL,GAAM,WACzB,SAASM,KACT,QAASJ,GAAW,cAA6B,GAAII,aAAcA,MAEjEC,GAAYP,GAAM,WACpBE,GAAW,kBAGbP,EAAQA,EAAQa,EAAIb,EAAQW,GAAKD,GAAkBE,GAAW,UAAW,CACvEH,UAAW,SAAmBK,EAAQC,GACpCb,EAAUY,GACVX,EAASY,GACT,IAAIC,EAAYC,UAAUC,OAAS,EAAIJ,EAASZ,EAAUe,UAAU,IACpE,GAAIL,IAAaF,EAAgB,OAAOH,EAAWO,EAAQC,EAAMC,GACjE,GAAIF,GAAUE,EAAW,CAEvB,OAAQD,EAAKG,QACX,KAAK,EAAG,OAAO,IAAIJ,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOC,EAAK,IAC/B,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,IACxC,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjD,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5D,IAAII,EAAQ,CAAC,MAEb,OADAA,EAAMC,KAAKC,MAAMF,EAAOJ,GACjB,IAAKT,EAAKe,MAAMP,EAAQK,IAGjC,IAAIG,EAAQN,EAAUO,UAClBC,EAAWvB,EAAOG,EAASkB,GAASA,EAAQG,OAAOF,WACnDG,EAASC,SAASN,MAAMO,KAAKd,EAAQU,EAAUT,GACnD,OAAOX,EAASsB,GAAUA,EAASF,M,kCC5CvC,+FAKe,SAASK,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SACzB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,0BAAMC,QAAQ,UACd,4DAEJ,kBAAC,IAAD,MACA,8BACMD,GAEN,kBAAC,IAAD,S,qrEChBhB,IAAME,EAAQlC,EAAd,Q,EACkCA,EAAQ,QAAlCmC,E,EAAAA,iBAAkB5C,E,EAAAA,IAClB6C,EAAgBpC,EAAQ,QAAxBoC,YAERnC,UAAiB,SAAqB,GAKlC,IAJFoC,EAIC,EAJDA,MACAxC,EAGC,EAHDA,WACAmC,EAEC,EAFDA,SACGM,E,oIACF,sCACKC,EAAgBJ,EAAtB,GACMK,EAAWJ,EAFhB,GAKKK,EAAMP,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIb3C,OAJF,GAQMoD,EAAOhB,YAAb,GACMiB,EAASD,EAAA,KAAS,SAAAE,GAAG,OAAIH,EAAJ,MAG3B,OAFQ,mCAAR,KAEOI,2BAAP,OACC,CAACd,EAlBJ,IAoBA,OAAOE,EAAA,mBAA2BrC,WAAY0C,GAA9C","file":"component---src-templates-mdx-template-js-b3ff591381829076bda7.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/main-layout';\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { Link } from \"gatsby\";\n\nexport default function Page({ data }) {\n    const { mdx: { body, frontmatter } } = data;\n    return (\n        <Layout>\n\n            <div id=\"blog\">\n                <section id=\"top-section\">\n                    <h1>Naptime Blog</h1>\n                    <h2>{frontmatter.title}</h2>\n                    <description>{frontmatter.description}</description>\n                </section>\n                <section>\n                    <MDXProvider>\n                        <MDXRenderer components={Link}>\n                            {body}\n                        </MDXRenderer>\n                    </MDXProvider>\n                </section>\n            </div>\n        </Layout>\n    );\n}\n\n// issue: pulling in the same MDX (resume) every time\nexport const data = graphql`\n  query MdxQuery($pathSlug: String!) {\n    mdx(slug: {eq: $pathSlug}) {\n      id\n      body\n      slug\n      frontmatter {\n        title\n        description\n      }\n    }\n  }`;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React, { Fragment } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport {Helmet} from 'react-helmet';\n\nexport default function Layout({ children }) {\n        return (\n            <Fragment>\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>Rest for your weary web.</title>\n                </Helmet>\n                <Header />\n                <main>\n                    { children }\n                </main>\n                <Footer />\n            </Fragment>\n        )\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}